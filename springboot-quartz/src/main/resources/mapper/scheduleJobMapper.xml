<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qskx.quartz.dao.ScheduleJobDao">
  <resultMap id="BaseResultMap" type="com.qskx.quartz.entity.ScheduleJob">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="job_name" jdbcType="VARCHAR" property="jobName" />
    <result column="alias_name" jdbcType="VARCHAR" property="aliasName" />
    <result column="job_group" jdbcType="VARCHAR" property="jobGroup" />
    <result column="job_trigger" jdbcType="VARCHAR" property="jobTrigger" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="cron_expression" jdbcType="VARCHAR" property="cronExpression" />
    <result column="sync" jdbcType="VARCHAR" property="sync" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="param" jdbcType="VARCHAR" property="param" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, job_name, alias_name, job_group, job_trigger, status, cron_expression,
    sync, url, param, description, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from schedule_job
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="queryList" parameterType="com.qskx.quartz.entity.ScheduleJob" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from schedule_job
    <where>
      <if test="jobName != null">
        job_name = #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="aliasName != null">
        alias_name = #{aliasName,jdbcType=VARCHAR},
      </if>
      <if test="jobGroup != null">
        job_group = #{jobGroup,jdbcType=VARCHAR},
      </if>
      <if test="jobTrigger != null">
        job_trigger = #{jobTrigger,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="cronExpression != null">
        cron_expression = #{cronExpression,jdbcType=VARCHAR},
      </if>
      <if test="sync != null">
        sync = #{sync,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="param != null">
        param = #{param,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </where>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from schedule_job
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.qskx.quartz.entity.ScheduleJob">
    insert into schedule_job (id, job_name, alias_name,
      job_group, job_trigger, status, 
      cron_expression, sync, url,
      param, description, create_time, 
      update_time)
    values (#{id,jdbcType=BIGINT}, #{jobName,jdbcType=VARCHAR}, #{aliasName,jdbcType=VARCHAR},
      #{jobGroup,jdbcType=VARCHAR}, #{jobTrigger,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, 
      #{cronExpression,jdbcType=VARCHAR}, #{sync,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR},
      #{param,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.qskx.quartz.entity.ScheduleJob">
    insert into schedule_job
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="jobName != null">
        job_name,
      </if>
      <if test="aliasName != null">
        alias_name,
      </if>
      <if test="jobGroup != null">
        job_group,
      </if>
      <if test="jobTrigger != null">
        job_trigger,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="cronExpression != null">
        cron_expression,
      </if>
      <if test="sync != null">
        sync,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="param != null">
        param,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="jobName != null">
        #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="aliasName != null">
        #{aliasName,jdbcType=VARCHAR},
      </if>
      <if test="jobGroup != null">
        #{jobGroup,jdbcType=VARCHAR},
      </if>
      <if test="jobTrigger != null">
        #{jobTrigger,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="cronExpression != null">
        #{cronExpression,jdbcType=VARCHAR},
      </if>
      <if test="sync != null">
        #{sync,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="param != null">
        #{param,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.qskx.quartz.entity.ScheduleJob">
    update schedule_job
    <set>
      <if test="jobName != null">
        job_name = #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="aliasName != null">
        alias_name = #{aliasName,jdbcType=VARCHAR},
      </if>
      <if test="jobGroup != null">
        job_group = #{jobGroup,jdbcType=VARCHAR},
      </if>
      <if test="jobTrigger != null">
        job_trigger = #{jobTrigger,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="cronExpression != null">
        cron_expression = #{cronExpression,jdbcType=VARCHAR},
      </if>
      <if test="sync != null">
        sync = #{sync,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="param != null">
        param = #{param,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qskx.quartz.entity.ScheduleJob">
    update schedule_job
    set job_name = #{jobName,jdbcType=VARCHAR},
      alias_name = #{aliasName,jdbcType=VARCHAR},
      job_group = #{jobGroup,jdbcType=VARCHAR},
      job_trigger = #{jobTrigger,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      cron_expression = #{cronExpression,jdbcType=VARCHAR},
      sync = #{sync,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      param = #{param,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>